buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://repo.spongepowered.org/maven" }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

group = "club.cpacket"
version = "1.0.0"

minecraft {
    version = "1.12.2-14.23.5.2768"
    mappings = "snapshot_20180814"
    runDir = 'run'
    coreMod = 'club.cpacket.packetlogger.mixin.MixinLoader'
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = 'https://jitpack.io/' }
}
dependencies {

    compile('org.spongepowered:mixin:0.8.2') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    compile 'org.jetbrains:annotations:21.0.1'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) { exclude 'mcmod.info' }
}
shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.jetbrains:annotations'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.packetlogger.refmap.json'
}
reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.packetlogger.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'club.cpacket.packetlogger.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
        )
    }
}

build.dependsOn(shadowJar)